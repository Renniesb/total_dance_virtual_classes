{"version":3,"sources":["img/choose.png","img/user.png","Nav/Nav.js","links.js","Video.js","Login/Login.js","LandingPage/LandingPage.js","Profile/Profile.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","getProfile","page","authMessage","history","useHistory","className","to","onClick","Salsa","beginner","name","link","intermediate","advanced","Bachata","Merengue","Video","dances","useState","danceStep","setDanceStep","danceLevel","setDanceLevel","style","background","choose","padding","includes","danceVideos","map","move","index","key","marginBottom","display","justifyContent","alignItems","flexDirection","textAlign","marginTop","height","width","src","frameBorder","allowFullScreen","title","renderSelectDance","xmlns","viewBox","fill","fillOpacity","d","Login","handlePassChange","handleUserChange","handleSubmit","dismissError","user_name","password","error","logout","onSubmit","data-test","type","value","onChange","LandingPage","Profile","marginLeft","alt","user","color","PrivateRoute","children","isAuthenticated","rest","render","pathname","App","setState","push","evt","preventDefault","state","target","loginProps","this","path","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.73a42b80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/choose.26deda8b.png\";","module.exports = __webpack_public_path__ + \"static/media/user.9a6abf2d.png\";","import React from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\n// import navStyles from './Nav.module.css'; \n\nfunction Nav({getProfile,page,authMessage}) {\n  let history = useHistory();\n    if(page === \"home\"){\n\n          return (<nav className=\"topnav\">\n\n                <Link className=\"active\" to=\"/\">Home</Link>\n\n                <Link to=\"/login\">Login</Link>\n\n                {\n                  //show the Videos menu and the profile menu tabs if the login is a success\n                  authMessage === \"success\" ? (\n                    <>\n                      <Link to=\"/videos\">Video Classes</Link>\n                      <button className=\"makeNavElement\" onClick={()=>{getProfile(history)}}>Profile</button>\n                    </> \n                  ): <></>\n                }\n\n          </nav>)\n    }else if(page===\"login\"){\n          return (<nav className=\"topnav\">\n\n                <Link to=\"/\">Home</Link>\n\n                <Link className=\"active\" to=\"/login\">Login</Link>\n\n                {\n                  //show the Videos menu and the profile menu tabs if the login is a success\n                  authMessage === \"success\" ? (\n                    <>\n                      <Link to=\"/videos\">Video Classes</Link>\n                      <button className=\"makeNavElement\" onClick={()=>{getProfile(history)}}>Profile</button>\n                    </> \n                  ): <></>\n                }\n\n          </nav>)\n    }else if(page===\"videos\"){\n      return(<nav className=\"topnav\">\n              \n                <Link to=\"/\">Home</Link>\n\n                <Link to=\"/login\">Login</Link>\n\n                {\n                  //show the Videos menu and the profile menu tabs if the login is a success\n                  authMessage === \"success\" ? (\n                    <>\n                      <Link className=\"active\" to=\"/videos\">Video Classes</Link>\n                      <button className=\"makeNavElement\" onClick={()=>{getProfile(history)}}>Profile</button>\n                    </> \n                  ): <></>\n                }\n              \n              </nav>)\n    }else{\n      return(<nav className=\"topnav\">\n              \n                <Link to=\"/\">Home</Link>\n\n                <Link to=\"/login\">Login</Link>\n\n                {\n                  //show the Videos menu and the profile menu tabs if the login is a success\n                  authMessage === \"success\" ? (\n                    <>\n                      <Link to=\"/videos\">Video Classes</Link>\n                      <button className=\"active makeNavElement\" onClick={()=>{getProfile(history)}}>Profile</button>\n                    </> \n                  ): <></>\n                }\n              \n              </nav>)\n    }\n    \n}\n\nexport default Nav;\n","let Salsa = {\n    beginner: [\n        \n            {\n                name: \"How To Spin Your Partner\",\n                link: \"46dybRGrCsc\"\n            },\n            {\n                name: \"Make your basic step look more natural\",\n                link:  \"9CzGaubcqQg\"\n            },\n            {\n                name: \"Closed position lead setup\",\n                link: \"vWeJbJgkTFQ\"\n            }\n        \n        \n    ],\n    intermediate: [\n        {\n            name: \"Pencil turns\",\n            link: \"ADysVrHMp3g\"\n\n        },\n        {\n            name: \"Lady double turn\",\n            link: \"TDoyttBpzU0\"\n        },    \n        {   name: \"Underarm turns\",\n            link: \"lhu6spVILW8\"        \n        }\n    ],\n    advanced: [\n        {\n            name: \"Back spot turn into cross body lead\",\n            link: \"ln9nxU-xN6A\"\n        },\n\n        {\n            name: \"Breakaway turn (inspired by Lindy hop)\", \n            link: \"ziH6X4QHITY\"\n        },\n        {\n            name: \"Back spot turn into titanic\",\n            link: \"yPkNaOGyAyc\"\n        }\n    ]\n}\nlet Bachata = {\n    beginner: [\n    {\n        name: \"Side basic and forward basic with simple turn\",\n        link: \"tgRMUVD1FeM\"\n    },\n    {\n        name: \"Beginning Bachata footwork\",\n        link: \"yz8JhAA_foE\"\n    },\n    {\n        name: \"6 Bachata Basic Steps\", \n        link: \"TJGfUGUoZe0\"\n    }\n    ],\n    intermediate: [\n        {\n            name: \"Alternating turns into slide\", \n            link: \"j3Fshk1NWyA\"\n        },\n\n        {\n            name: \"Syncopation steps by Alemana\", \n            link: \"Znytk6hMyj4\"\n        },\n        {\n            name: \"Side to side footwork (kick shuffles)\", \n            link: \"Lco4bvPyz5A\"\n        }\n    ],\n    advanced: [\n        {\n            name: \"More advanced footwork (nice rotational moves with Texas Tommy)\",\n            link: \"5R8bhnseysk\"\n        },\n        {\n            name: \"Bachata advanced footwork\", \n            link: \"FVi_SaJPeqA\"\n        },\n        {\n            name: \"Dips and lunges\", \n            link: \"Esd3BlxUXdU\"\n        }\n    ]\n}\nlet Merengue = {\n    beginner: [\n        {\n            name: \"basic steps\",\n            link: \"KO_hobER7SU\"\n        },\n        {\n            name: \"Side together side steps\",\n            link: \"OAp3IknZmV8\"\n        },\n        {\n            name: \"Side to side, turns, basic combinations\",\n            link: \"UDSbJAy6ehQ\"\n        }\n\n          \n    ],\n    intermediate: [\n        {\n            name:\"Rainbow separation step\",\n            link:\"emmJJkf2DFo\"\n        },\n        {\n            name:\"Colocho\",\n            link:\"FJ5MrZsPIjQ\" \n        },\n        {\n            name: \"Basket\",\n            link: \"3CxuhGMF6R8\"\n        }\n          \n         \n    ],\n    advanced: [\n        {\n            name:\"Wrap to tunnel\",\n            link: \"4d1u1P36HWk\"       \n        },\n        {\n            name:\"Hammerlock to behind the back\",\n            link: \"70J6zISofBk\"       \n        },\n        {\n            name:\"Conga breaks with crossing action\",\n            link:\"SHOOMxiSD-k\"        \n        }         \n    ]\n}\n\nexport {\n    Salsa,\n    Bachata,\n    Merengue\n};","import React, { useState } from 'react';\nimport Nav from './Nav/Nav';\nimport {Salsa,Bachata,Merengue} from './links';\nimport choose from './img/choose.png';\n    \nfunction Video({getProfile,authMessage}) {\n    const dances = ['Salsa','Bachata','Merengue'];\n    const [danceStep, setDanceStep] = useState('chooseDance');\n    const [danceLevel, setDanceLevel] = useState('all');\n\n    const getHero = () => {\n        if(danceStep === \"Salsa\" && danceLevel !== 'all' ){\n            return (\n                <header className=\"salsa-hero\">\n                     <div className=\"container\">\n                         <h1 className=\"main-text\">{danceLevel} Salsa Dance Lessons</h1>\n                     </div>\n                 </header>  )\n\n        }\n        else if (danceStep === \"Bachata\" && danceLevel !== 'all'){\n            return (\n                <header className=\"bachata-hero\">\n                     <div className=\"container\">\n                         <h1 className=\"main-text\">{danceLevel} Bachata Dance Lessons</h1>\n                     </div>\n                 </header>  )\n        }\n        else if (danceStep === \"Merengue\" && danceLevel !== 'all'){\n            return (\n                <header className=\"merengue-hero\">\n                     <div className=\"container\">\n            <h1 className=\"main-text\">{danceLevel} Merengue Dance Lessons</h1>\n                     </div>\n                 </header>  )\n        }\n        else {\n            return (\n                <header style={{background: `url(${choose})`, padding: \"9em 0\"}} className=\"hero\">\n                     <div className=\"container\">\n                         <h1 className=\"main-text\">Virtual Dance Lessons</h1>\n                     </div>\n                 </header>  )\n        }\n       \n    }\n       \n    const renderSelectDance = () => {\n\n        if(danceStep === 'chooseDance'){\n            return (\n                <>\n                    <section className=\"select-videos\">\n                        <div className=\"btn-group\">\n                            <h2>Select The dance you are learning</h2>\n                            <button onClick={() => setDanceStep('Salsa')}  className=\"select\">Salsa</button>\n                            <button onClick={() => setDanceStep('Bachata')} className=\"select\">Bachata</button>\n                            <button onClick={() => setDanceStep('Merengue')} className=\"select\">Merengue</button>\n                        </div>\n                    </section>\n                </>\n            )\n\n        }\n        if(dances.includes(danceStep) && danceLevel !== 'all'){\n            let danceVideos;\n            \n            switch(danceStep) {\n                case 'Salsa':\n                  danceVideos = Salsa[danceLevel]\n                  break;\n                case 'Bachata':\n                    danceVideos = Bachata[danceLevel]\n                  break;\n                default:\n                  danceVideos = Merengue[danceLevel]\n            }\n            return danceVideos.map((move,index)=>{\n                return (\n                    <div key={index} style={{ marginBottom: \"20px\"}}>\n                        <section style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\", textAlign: \"center\"}}>\n    \n                            <h3 style={{marginTop: \"50px\", marginBottom: \"15px\"}}>{move.name}</h3>\n                            <div className=\"img-container\">\n                                <iframe style={{height: \"315px\", width: \"100%\"}}src={`http://www.youtube.com/embed/${move.link}`}\n                                 frameBorder=\"0\" allowFullScreen title={move.name}>\n                                </iframe>\n                            </div>\n                        </section>\n                    </div>\n                )\n            })\n        }     \n        else{\n            return (\n                <>\n                 <section className=\"select-videos slide-in-right\">\n                     <div className=\"btn-group\">\n                         <h2>Select Your Skill Level</h2>\n                         <button onClick={()=>{setDanceLevel('beginner')}}  className=\"select\">Beginner</button>\n                         <button onClick={()=>{setDanceLevel('intermediate')}} className=\"select\">Intermediate</button>\n                         <button onClick={()=>{setDanceLevel('advanced')}} className=\"select\">Advanced</button>\n                     </div>\n                 </section>\n                </>\n            ) \n            \n        }\n    }\n    \n\n    return (\n        <>\n            <Nav authMessage={authMessage} getProfile={getProfile} page=\"videos\"/>\n            {\n                getHero()\n            }\n           {\n               renderSelectDance()\n           } \n           <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#333333\" fillOpacity=\"1\" d=\"M0,224L48,202.7C96,181,192,139,288,128C384,117,480,139,576,170.7C672,203,768,245,864,229.3C960,213,1056,139,1152,122.7C1248,107,1344,149,1392,170.7L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path></svg>\n        </>\n    )\n}\n\nexport default Video;","import React from 'react';\nimport './Login.css';\n// import env from '../config';\nimport Nav from '../Nav/Nav'\n\n// import config from '../config'\n\nconst Login = ({\n    handlePassChange,\n    handleUserChange,\n    handleSubmit,\n    dismissError,\n    user_name,\n    password,\n    error,    \n    authMessage,\n    logout,\n    getProfile\n}) => {\n    return (\n        <div>\n            <Nav authMessage={authMessage} getProfile={getProfile} page=\"login\"/>\n            <div className=\"Login\">\n                <form onSubmit={handleSubmit}>\n                {\n                    error &&\n                    <h3 data-test=\"error\" onClick={dismissError}>\n                    <button onClick={dismissError}>✖</button>\n                    {error}\n                    </h3>\n                }\n                <label>User Name</label>\n                <input type=\"text\" data-test=\"username\" value={user_name} onChange={handleUserChange} />\n\n                <label>Password</label>\n                <input type=\"password\" data-test=\"password\" value={password} onChange={handlePassChange} />\n\n                <p>{authMessage}</p>\n\n                {authMessage !== \"success\" ? <input type=\"submit\" value=\"Log In\" data-test=\"submit\" /> : <button onClick={logout}  data-test=\"submit\">Log Out</button>   } \n                </form>\n            </div>\n        </div>\n        \n    )\n}\n\n\n\nexport default Login;\n","import React from 'react';\nimport './LandingPage.css';\nimport Nav from '../Nav/Nav'\n\nconst LandingPage = ({getProfile,authMessage}) => {\n    return (\n        <div>\n        <Nav authMessage={authMessage} getProfile={getProfile} page=\"home\"/>\n        <header className=\"hero\">\n            <div className=\"container\">\n                <h1 className=\"main-text\">Interactive dance playlists</h1>\n                <p className=\"description\">Choose a dance type and skill level to see a curated list of videos that break down moves step by step</p>\n            </div>\n        </header>  \n        <section className=\"bg-gray\">\n                <div className=\"get-started\">\n                    <h2>Getting Started</h2>\n                </div>\n                \n                <ol>                \n                    <li>Login to the app: username = dunder,   password = password</li>\n                    <li>Click on Video quizzes</li>\n                    <li>Select the dance you want to learn</li>\n                    <li>Select the level of the dance you want to learn</li>\n                </ol>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#333333\" fillOpacity=\"1\" d=\"M0,224L48,202.7C96,181,192,139,288,128C384,117,480,139,576,170.7C672,203,768,245,864,229.3C960,213,1056,139,1152,122.7C1248,107,1344,149,1392,170.7L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path></svg>\n                \n        </section>      \n        </div>\n    )\n        \n    \n}\n\nexport default LandingPage;\n","import React from 'react';\nimport './Profile.css';\nimport Nav from '../Nav/Nav';\nimport user from '../img/user.png';\nconst Profile = ({authMessage,getProfile}) => {\n    return (\n        <>\n        <div>\n            <Nav authMessage={authMessage} getProfile={getProfile} page=\"profile\"/>\n            <div className=\"profile-container\">\n                <h1>Profile Page</h1>\n                <img style={{marginLeft: \"-10px\", width: \"200px\", height:\"200px\"}} alt=\"user profile icon\" src={user}></img>\n                <h3 style={{display: \"inline\"}}>Username:<span style={{color: \"rebeccapurple\"}}> dunder</span></h3>\n                <h3 style={{display: \"inline\"}}>Name:<span style={{color: \"rebeccapurple\"}}> John Smith</span></h3>\n            </div>\n        </div>\n        {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#333333\" fillOpacity=\"1\" d=\"M0,224L48,202.7C96,181,192,139,288,128C384,117,480,139,576,170.7C672,203,768,245,864,229.3C960,213,1056,139,1152,122.7C1248,107,1344,149,1392,170.7L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path></svg> */}\n        </>\n    )\n        \n    \n}\n\nexport default Profile;\n","import React from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\n\nconst PrivateRoute = ({children, isAuthenticated, ...rest}) => {\n    return (\n        <Route\n          {...rest}\n          render={() =>\n            isAuthenticated ? (\n              children\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n\n                }}\n              />\n            )\n          }\n        />\n    );\n}\n\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport './App.css';\nimport Video from './Video'\nimport Login from './Login/Login'\nimport LandingPage from './LandingPage/LandingPage'\nimport Profile from './Profile/Profile'\n// import env from './config';\n\n\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport PrivateRoute from './PrivateRoute';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user_name: '',\n      password: '',\n      error: '',\n      authMessage: '',\n      isAuthenticated: false\n    };\n\n  }\n\n  getProfile = (history)=>{\n\n        this.setState({ isAuthenticated: true },()=>{\n          history.push('./profile')\n        })\n\n\n    // fetch(`${env.API_ENDPOINT}/user/profile`,\n    // {\n    //   headers: {Authorization: 'Bearer '+ localStorage.getItem(env.TOKEN_KEY)},\n    //   method: \"POST\",\n\n    // }\n    // )\n    //   .then(response => response.json())\n    //   .then(data =>{ \n    //     console.log(localStorage.getItem(env.TOKEN_KEY))\n    //     this.setState({ isAuthenticated: true, profile: data },()=>{\n    //       history.push('./profile')\n    //     })\n        \n    //   }\n    //   ).catch(err=>console.log(err))\n  }\n\n  dismissError = () => {\n    this.setState({ error: '' });\n  }\n\n  handleSubmit = (evt)=> {\n    evt.preventDefault();\n    const {user_name, password} = this.state;\n\n    if (!user_name) {\n      return this.setState({ error: 'Username is required' });\n    }\n\n    if (!password) {\n      return this.setState({ error: 'Password is required' });\n    }\n\n    if(user_name === 'dunder' && password === 'password'){\n      this.setState({authMessage: \"success\"})\n    }\n    else {\n      this.setState({authMessage: \"failed\"})\n    }\n    // fetch(`${env.API_ENDPOINT}/auth/login`, {\n    //   method: 'POST',\n    //   headers: {\n    //     'content-type': 'application/json',\n    //   },\n    //   body: JSON.stringify({ user_name, password }),\n    // })\n    //   .then(res =>{\n    //     if(!res.ok){\n    //       res.json().then(e => Promise.reject(e))\n    //       this.setState({authMessage: \"failed\"})\n    //     }\n    //     else {\n    //       this.setState({authMessage: \"success\"})\n    //       return res.json();          \n    //     }\n    //   }\n\n    //   )\n    //   .then(data => {\n    //       localStorage.setItem(env.TOKEN_KEY, data.authToken)\n          \n    //   })\n    //   .catch(res => {\n    //     this.setState({ error: '' });\n    //   })\n  }\n\n\n  handleUserChange = (evt) => {\n    this.setState({\n      user_name: evt.target.value,\n    });\n  };\n\n  handlePassChange = (evt) => {\n    this.setState({\n      password: evt.target.value,\n    });\n  }\n  logout = () => {\n    // console.log('here we go')\n    // localStorage.removeItem(env.TOKEN_KEY)\n    this.setState({authMessage: '', isAuthenticated: false})\n  }\n\n  render() {\n    const loginProps = {\n      handlePassChange : this.handlePassChange,\n      handleUserChange: this.handleUserChange,\n      handleSubmit: this.handleSubmit,\n      dismissError: this.dismissError,\n      user_name: this.state.user_name,\n      password: this.state.password,\n      error: this.state.error,\n      authMessage: this.state.authMessage,\n      logout: this.logout,\n      getProfile: this.getProfile\n    }\n    \n\n    return (\n      <div>     \n          <Switch>\n            <Route path=\"/login\">\n              <Login {...loginProps}/>\n            </Route>\n            <Route path=\"/videos\">\n              <Video authMessage={this.state.authMessage} getProfile={this.getProfile} />\n            </Route>       \n            <PrivateRoute path=\"/profile\" isAuthenticated = {this.state.isAuthenticated}>\n                <Profile authMessage={this.state.authMessage} getProfile={this.getProfile} />\n            </PrivateRoute>\n            <Route path=\"/\">\n              <LandingPage authMessage={this.state.authMessage} getProfile={this.getProfile}/>\n            </Route>           \n          </Switch>\n      </div>  \n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>  \n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}